---
# - include: backup.yml

- name: application server for haterslist
  hosts: app
  remote_user: production
  vars_files:
    - ../config/vars.yml
  vars:
    app: "{{ apps['haterslist1'] }}"
  tasks:
  - name: install dependences for haterslist
    apt:
      name: "{{item}}"
    with_items:
      - build-essential
      - libmysqlclient-dev
    become: true
  
  roles:
    - role: rails
      deployer: 'production'
      deploy_path: 'apps'
      name: "{{ app['name'] }}"
      hostname: "{{ app['hostname'] }}"
      service: "{{ app['service'] }}"
      config_path: "{{ app['config_path'] }}"

    - role: rvm_io.ruby
      tags: ruby
      rvm1_rubies:
        - "{{ app['ruby'] }}"
      rvm1_user: 'production'
      # ignores after first time
      rvm1_rvm_check_for_updates: False
      rvm1_gpg_keys: ''


- hosts: db
  remote_user: production
  vars_files:
    - ../config/vars.yml
  vars:
    db: "{{ dbs['db1'] }}"
    mysql_root_password: "{{ db['mysql_root_password'] }}"
  tasks:
    - name: install mysql
      apt:
        name: "{{item}}"
      become: true
      with_items:
        - mysql-server
        - python-mysqldb

    - name: start mysql
      become: true
      service:
        name: mysql
        state: started
        enabled: true

    - name: update mysql root password for all root accounts
      sudo: yes
      mysql_user:
        name: root
        host: "{{ item }}"
        password: "{{ mysql_root_password }}"
        login_user: root
        login_password: "{{ mysql_root_password }}"
        check_implicit_admin: yes
        priv: "*.*:ALL,GRANT"
      with_items:
        - "{{ ansible_hostname }}"
        - 127.0.0.1
        - ::1
        - localhost

    - name: create mysql db
      mysql_db:
        name: "{{ item }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      with_items: "{{ db['databases'] }}"

    - name: create mysql user
      mysql_user:
        name: "{{ item['name'] }}"
        password: "{{ item['password' ]}}"
        priv: "{{ item['priv'] }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      with_items: "{{ db['users'] }}"
